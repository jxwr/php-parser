package ast

type Visitor interface {
	VisitIdentifier(n *Identifier)
	VisitVariable(n *Variable)
	VisitBinaryExpression(n *BinaryExpression)
	VisitTernaryExpression(n *TernaryExpression)
	VisitUnaryExpression(n *UnaryExpression)
	VisitNewExpression(n *NewExpression)
	VisitPropertyExpression(n *PropertyExpression)
	VisitClassExpression(n *ClassExpression)
	VisitAssignmentExpression(n *AssignmentExpression)
	VisitFunctionCallExpression(n *FunctionCallExpression)
	VisitConstantExpression(n *ConstantExpression)
	VisitArrayExpression(n *ArrayExpression)
	VisitArrayLookupExpression(n *ArrayLookupExpression)
	VisitArrayAppendExpression(n *ArrayAppendExpression)
	VisitShellCommand(n *ShellCommand)
	VisitLiteral(n *Literal)
	VisitInclude(n *Include)
	VisitAnonymousFunction(n *AnonymousFunction)
	VisitGlobalDeclaration(n *GlobalDeclaration)
	VisitExpressionStmt(n *ExpressionStmt)
	VisitEmptyStatement(n *EmptyStatement)
	VisitEchoStmt(n *EchoStmt)
	VisitReturnStmt(n *ReturnStmt)
	VisitBreakStmt(n *BreakStmt)
	VisitContinueStmt(n *ContinueStmt)
	VisitThrowStmt(n *ThrowStmt)
	VisitIncludeStmt(n *IncludeStmt)
	VisitExitStmt(n *ExitStmt)
	VisitFunctionCallStmt(n *FunctionCallStmt)
	VisitFunctionStmt(n *FunctionStmt)
	VisitFunctionDefinition(n *FunctionDefinition)
	VisitInterface(n *Interface)
	VisitDeclareBlock(n *DeclareBlock)
	VisitClass(n *Class)
	VisitMethod(n *Method)
	VisitBlock(n *Block)
	VisitIfStmt(n *IfStmt)
	VisitSwitchStmt(n *SwitchStmt)
	VisitForStmt(n *ForStmt)
	VisitWhileStmt(n *WhileStmt)
	VisitDoWhileStmt(n *DoWhileStmt)
	VisitTryStmt(n *TryStmt)
	VisitCatchStmt(n *CatchStmt)
	VisitForeachStmt(n *ForeachStmt)
	VisitListStatement(n *ListStatement)
	VisitStaticVariableDeclaration(n *StaticVariableDeclaration)
}
